What’s a design pattern?
    Design patterns are typical solutions to commonly occurring problems in software design.
    They are like pre-made blueprints that you can customize to solve a recurring design problem in your code.

    You can’t just find a pattern and copy it into your program, the way you can with off-the-shelf functions or libraries.
    The pattern is not a specific piece of code, but a general concept for solving a particular problem.
    You can follow the pattern details and implement a solution that suits the realities of your own program.


The Catalog of Design Patterns


    1 . Creational patterns
        These patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code.


    2 . Structural patterns
        These patterns explain how to assemble objects and classes into larger structures while keeping these structures flexible and efficient.


    3 . Behavioral patterns
        These patterns are concerned with algorithms and the assignment of responsibilities between objects.




Reference
    https://refactoring.guru/design-patterns/what-is-pattern